<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:util="http://www.springframework.org/schema/util"
       xmlns:lang="http://www.springframework.org/schema/lang"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd http://www.springframework.org/schema/lang http://www.springframework.org/schema/lang/spring-lang.xsd">
    <!--把Uservice的创建权交给bean-->
    <!--    <bean id="userService" class="com.imooc.ioc.demo1.UserServiceImpl">
            &lt;!&ndash;设置属性 依赖注入，不需要修改代码只需要修改配置文件&ndash;&gt;
            <property name="name" value="Lisa"/>
        </bean>
        <bean id="food" class="com.imooc.ioc.demo1.FoodImpl">
            <property name="name" value="香蕉"/>
            <property name="taste" value="甜甜的"/>
            <property name="kind" value="水果"/>
        </bean>-->

    <!--Bean的实例化的三种方式=======-->
    <!--第一种：无参构造器（默认）-->
    <!--
        <bean id="bean1" class="com.imooc.ioc.demo2.Bean1"/>
    -->
    <!--第二种：静态工厂方式-->
    <!--
        <bean id="bean2" class="com.imooc.ioc.demo2.Bean2Factory" factory-method="creatBean2"/>
    -->
    <!--第三种：实例工厂方式-->
    <!--  <bean id="bean3Factory" class="com.imooc.ioc.demo2.Bean3Factory"/>
      <bean id="bean3" factory-bean="bean3Factory" factory-method="creatBean3"/>
  -->
    <!--bean的作用范围 默认单例模式===========-->
    <!--<bean id="person" class="com.imooc.ioc.demo3.Person" scope="prototype"/>-->

    <!--bean创建销毁函数-->
    <!--    <bean id="man" class="com.imooc.ioc.demo3.Man" init-method="init" destroy-method="destory" scope="singleton">
            <property name="name" value="zhangsan"/>
        </bean>-->
    <!--<bean class="com.imooc.ioc.demo3.MyBeanPostProcessor"/>

    <bean id="userDao" class="com.imooc.ioc.demo3.UserImpl"/>-->

    <!--构造方法的属性注入===========-->
    <bean id="user" class="com.imooc.ioc.demo4.User">
        <constructor-arg name="name" value="wang"/>
        <constructor-arg name="age" value="25"/>
    </bean>

    <!--bean的get方法属性注入-->
    <bean id="person" class="com.imooc.ioc.demo4.Person">
        <property name="name" value="wang1"/>
        <property name="age" value="32"/>
        <property name="cat" ref="cat"/>
    </bean>

    <bean id="cat" class="com.imooc.ioc.demo4.Cat">
        <property name="name" value="ketty"/>
    </bean>

    <!--bean的p名称空间属性注入====-->
    <bean id="person1" class="com.imooc.ioc.demo4.Person"
          p:name="wang2" p:age="45" p:cat-ref="ycat"/>

    <bean id="ycat" class="com.imooc.ioc.demo4.Cat" p:name="yello"/>

    <!--bean的SpEL属性注入====-->
    <bean id="category" class="com.imooc.ioc.demo4.Category">
        <property name="name" value="#{'服装'}"/>
    </bean>
    <bean id="productInfo" class="com.imooc.ioc.demo4.ProductInfo"/>

    <bean id="product" class="com.imooc.ioc.demo4.Product">
        <property name="namr" value="#{'男装'}"/>
        <property name="price" value="#{productInfo.calculatePrice()}"/>
        <property name="category" value="#{category}"/>
    </bean>


    <!--复杂类型（集合类型）的属性注入-->
    <bean id="collectionBean" class="com.imooc.ioc.demo5.CollectionnBean">
        <!--数组类型-->
        <property name="arrs">
            <list>
                <value>aaa</value>
                <value>bbb</value>
                <value>ccc</value>
            </list>
        </property>
        <!--list类型-->
        <property name="list">
            <list>
                <value>111</value>
                <value>222</value>
                <value>333</value>
            </list>
        </property>
        <!--set的注入-->
        <property name="strings">
            <set>
                <value>ddd</value>
                <value>eee</value>
                <value>fff</value>
            </set>
        </property>
        <!--map的方式-->
        <property name="map">
            <map>
                <entry key="aaa" value="111"/>
                <entry key="bbb" value="222"/>
                <entry key="ccc" value="333"/>
            </map>
        </property>
        <!--Properties的注入-->
        <property name="properties">
            <props>
                <prop key="username">wang</prop>
                <prop key="password">1234</prop>
            </props>
        </property>
    </bean>

</beans>
